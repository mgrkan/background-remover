services:
  image-worker:
    build: ./remover
    volumes:
      - images-volume:/app/images
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
    tty: true
    stdin_open: true
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: 123456789
      MINIO_BUCKET_NAME: images

  rabbitmq:
    image: rabbitmq:4.0-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 20s

  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: 123456789
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: 123456789
    volumes:
      - ~/minio/data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 10s
  
  minio_mc:
    image: minio/mc
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 admin 123456789;
      /usr/bin/mc mb myminio/images --ignore-existing;
      /usr/bin/mc anonymous set download myminio/images;
      exit 0;
      "
    depends_on:
      minio:
        condition: service_healthy
volumes:
  images-volume: